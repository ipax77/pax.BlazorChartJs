@using pax.BlazorChartJs
@using pax.BlazorChartJs.BlazorLegend
@inherits LegendComponentBase

<div>
    <ul style="display: flex;
        flex-direction: row;
        margin: 0;
        padding: 0;">
        @* Pie and doughnut charts only have a single dataset and visibility is per item *@

        @foreach (var item in LegendItems)
        {
            <li @onclick="e => HandleLegendItemClick(e, item)" 
                @onmouseover="e => HandleLegendItemHover(e, item)"
                @onmouseleave="e => HandleLegendItemLeave(e, item)"
                style="align-items: center;
                            cursor: pointer;
                            display: flex;
                            flex-direction: row;
                            margin-left: 10px;">
                <span style="background: @item.FillStyle;
                            border-color: @item.StrokeStyle;
                            border-width: @($"{item.LineWidth}px");
                            display: inline-block;
                            flex-shrink: 0;
                            height: 20px;
                            margin-right: 10px;">
                    <p style="color: @item.FontColor;
                                margin: 0;
                                padding: 0;
                                text-decoration: @($"{(item.Hidden ? "line-through" : "")}")">
                        @item.Text
                    </p>
                </span>
            </li>
        }
    </ul>

</div>

@code {
    public override async Task HandleLegendItemHover(MouseEventArgs e, ChartJsLegendItem item)
    {
        var dataset = ChartJsConfig.Data.Datasets.ElementAt(item.DatasetIndex);
        if (dataset is LineDataset lineDataset)
        {
            lineDataset.BorderWidth = 10;
        }
        ChartJsConfig.UpdateDataset(dataset);

        await base.HandleLegendItemHover(e, item);
    }

    public override async Task HandleLegendItemLeave(MouseEventArgs e, ChartJsLegendItem item)
    {
        var dataset = ChartJsConfig.Data.Datasets.ElementAt(item.DatasetIndex);
        if (dataset is LineDataset lineDataset)
        {
            lineDataset.BorderWidth = 6;
        }
        ChartJsConfig.UpdateDataset(dataset);

        await base.HandleLegendItemLeave(e, item);
    }
}
