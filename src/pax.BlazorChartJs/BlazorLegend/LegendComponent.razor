
<div>
    <ul style="display: flex;
        flex-direction: row;
        margin: 0;
        padding: 0;">
        @* Pie and doughnut charts only have a single dataset and visibility is per item *@

        @foreach (var item in legendItems)
        {
            <li @onclick="e => HandleLegendItemClick(e, item)" style="align-items: center;
                            cursor: pointer;
                            display: flex;
                            flex-direction: row;
                            margin-left: 10px;">
                        <span style="background: @item.FillStyle;
                            border-color: @item.StrokeStyle;
                            border-width: @($"{item.LineWidth}px");
                            display: inline-block;
                            flex-shrink: 0;
                            height: 20px;
                            margin-right: 10px;">
                            <p style="color: @item.FontColor;
                                margin: 0;
                                padding: 0;
                                text-decoration: @($"{(item.Hidden ? "line-through" : "")}")">
                                @item.Text
                            </p>
                            </span>
                    </li>
        }
    </ul>

</div>

@code {
    [Parameter, EditorRequired]
    public ChartJsConfig ChartJsConfig { get; set; } = default!;

    [Parameter, EditorRequired]
    public ChartComponent ChartComponent { get; set; } = default!;

    List<ChartJsLegendItem> legendItems = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    public async Task UpdateLegend()
    {
        legendItems = await ChartComponent.GetLegendItems();
        await InvokeAsync(() => StateHasChanged());
    }

    public async Task HandleLegendItemClick(MouseEventArgs e, ChartJsLegendItem item)
    {
        // await ChartComponent.ToggleDataVisibility(item.DatasetIndex);

        await ChartComponent.SetDatasetVisibility(item.DatasetIndex, item.Hidden);
        item.Hidden = !item.Hidden;
    }
}
